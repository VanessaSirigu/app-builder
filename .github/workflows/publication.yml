name: PUB

on:
  push:
    tags:
      - 'v*'

env:
  ENTANDO_OPT_USE_PPL_TAG: "v1.4.2"
  ENTANDO_OPT_DATA_REPO: "${{ secrets.ENTANDO_OPT_DATA_REPO }}"
  ENTANDO_OPT_DATA_REPO_TOKEN: "${{ secrets.ENTANDO_OPT_DATA_REPO_TOKEN }}"
  ENTANDO_OPT_ENVIRONMENT_NAMES: "${{ secrets.ENTANDO_OPT_ENVIRONMENT_NAMES }}"
  ENTANDO_OPT_FEATURES: "${{ secrets.ENTANDO_OPT_FEATURES }}"
  ENTANDO_OPT_GLOBAL_FEATURES: "${{ secrets.ENTANDO_OPT_GLOBAL_FEATURES }}"
  ENTANDO_OPT_LOG_LEVEL: "${{ secrets.ENTANDO_OPT_LOG_LEVEL }}"
  ENTANDO_OPT_CUSTOM_ENV: "${{ secrets.ENTANDO_OPT_CUSTOM_ENV }}"
  PPL_CONTEXT: ${{ toJson(github) }}
  LOCAL_CLONE_DIR: "local-checkout"


jobs:
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # PUBLICATION

  publication:
    outputs:
      POST_PUB_DOCKER_SCAN: ${{ steps.START.outputs.POST_PUB_DOCKER_SCAN }}
      POST_DEP_TESTS: ${{ steps.START.outputs.POST_DEP_TESTS }}
    env:
      ENTANDO_BOT_TOKEN: ${{ secrets.ENTANDO_BOT_TOKEN }}
      PUBLIC_URL: "/app-builder"
      DOMAIN: "/entando-de-app"
      USE_MOCKS: "false"
      CI: "false"
      COMPONENT_REPOSITORY_UI_ENABLED: "true"
      KEYCLOAK_ENABLED: "true"
    runs-on: ubuntu-latest
    steps:
      - name: "PR PIPELINE START"
        id: START
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}
          ~/ppl-run \
            .. status-report \
            .. @setup-feature-flags "PR_FORMAT_CHECK" "BOM_CHECK" "BOM" "POST_PUB_DOCKER_SCAN" "POST_DEP_TESTS" \
          ;
      #~ CHECKOUT
#      - name: "CHECKOUT"
#        id: CHECKOUT
#        run: |
#          ~/ppl-run \
#            .. checkout-branch --id "CHECKOUT FOR PUBLICATION" \
#                  --lcd "$LOCAL_CLONE_DIR" \
#                  --token "$ENTANDO_BOT_TOKEN" \
#            .. pr-preflight-checks --only flags --lcd "$LOCAL_CLONE_DIR" \
#          ;
      - name: Checkout
        uses: actions/checkout@v3
      #~ NODE
      - name: "Set up Node 14"
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      #~ NPM CACHE
      - name: "Cache NPM Packages"
        id: package-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm
      #~ PUBLISH  THE ARTIFACT
#      - name: "Publish package"
#        run: |
#          export ENTANDO_OPT_AWS_ACCESS_KEY_ID="${{ secrets.ENTANDO_OPT_AWS_ACCESS_KEY_ID }}"
#          export ENTANDO_OPT_AWS_SECRET_ACCESS_KEY="${{ secrets.ENTANDO_OPT_AWS_SECRET_ACCESS_KEY }}"
#
#          ~/ppl-run generic PUBLISH --id "PUBLICATION" \
#            --lcd "$LOCAL_CLONE_DIR"
#        env:
#          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
#          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      #~ UPDATE THE BOM (if required)
      - name: "BOM Update"
        if: steps.CHECKOUT.outputs.BOM_UPDATE_FLAG == 'true' && steps.START.outputs.BOM == 'true'
        run: |
          ~/ppl-run bom update-bom \
            --id "UPDATE-BOM" \
            --lcd "$LOCAL_CLONE_DIR" \
            --token "$ENTANDO_BOT_TOKEN" \
          ;
          
      #~ PUBLISH TO DOCKER
      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --production

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # List of Docker Images to use as a base name for tags
          images: |
            entando/app-builder
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr,value={{base_ref}}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,event=pr,value={{base_ref}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ENTANDO_OPT_DOCKER_USERNAME }}
          password: ${{ secrets.ENTANDO_OPT_DOCKER_PASSWORD }}

# Uncomment this when we release for good?
#      - name: Login to RHT
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ secrets.ENTANDO_RHT_DOCKER_REGISTRY }}
#          username: ${{ secrets.ENTANDO_RHT_DOCKER_USERNAME }}
#          password: ${{ secrets.ENTANDO_RHT_DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

# Previous publishing
#      - name: "Publish docker"
#        run: |
#          export ENTANDO_OPT_DOCKER_PASSWORD="${{ secrets.ENTANDO_OPT_DOCKER_PASSWORD }}"
#          export ENTANDO_OPT_DOCKER_ALT_LOGIN_URL="${{ secrets.ENTANDO_OPT_DOCKER_ALT_LOGIN }}"
#          export ENTANDO_OPT_DOCKER_ALT_USERNAME="${{ secrets.ENTANDO_OPT_DOCKER_ALT_USERNAME }}"
#          export ENTANDO_OPT_DOCKER_ALT_PASSWORD="${{ secrets.ENTANDO_OPT_DOCKER_ALT_PASSWORD }}"
#
#          ~/ppl-run docker publish --id "PUBLISH-DOCKER" --lcd "$LOCAL_CLONE_DIR"
          
          
#build-and-push:
#    name: Build and Push
#    runs-on: ubuntu-latest
#    env:
#      PUBLIC_URL: "/app-builder"
#      DOMAIN: "/entando-de-app"
#      USE_MOCKS: "false"
#      CI: "false"
#      COMPONENT_REPOSITORY_UI_ENABLED: "true"
#      KEYCLOAK_ENABLED: "true"
#    steps:
##      - name: Install dependencies
##        run: npm ci
##
##      - name: Build project
##        run: npm run build --production
#
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          # List of Docker Images to use as a base name for tags
#          images: |
#            bqueiroz/app-builder
#          # generate Docker tags based on the following events/attributes
#          tags: |
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=pr,value={{base_ref}}
#            type=ref,event=tag
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha
#            type=raw,event=pr,value={{base_ref}}
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          platforms: linux/amd64,linux/arm64
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.ENTANDO_OPT_DOCKER_USERNAME }}
#          password: ${{ secrets.ENTANDO_OPT_DOCKER_PASSWORD }}
#
##      - name: Login to RHT
##        uses: docker/login-action@v2
##        with:
##          registry: ${{ secrets.ENTANDO_RHT_DOCKER_REGISTRY }}
##          username: ${{ secrets.ENTANDO_RHT_DOCKER_USERNAME }}
##          password: ${{ secrets.ENTANDO_RHT_DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          platforms: linux/amd64,linux/arm64

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # POST PUB JOBS

  post-pub-docker-scan:
    needs: [ 'publication' ]
    if: needs.publication.outputs.POST_PUB_DOCKER_SCAN == 'true'
    runs-on: ubuntu-latest
    steps:
      #~ CHECKOUT
      - name: "CHECKOUT"
        id: CHECKOUT
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}
          ~/ppl-run \
            .. checkout-branch --id "CHECKOUT FOR PUBLICATION" \
                  --lcd "$LOCAL_CLONE_DIR" \
                  --token "$ENTANDO_BOT_TOKEN" \
            .. pr-preflight-checks --only flags --lcd "$LOCAL_CLONE_DIR" \
          ;
      #~ NODE
      - name: "Set up Node 14"
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      #~ NPM CACHE
      - name: "Cache NPM Packages"
        id: package-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm
      #~ SCAN
      - name: "Scan docker"
        env:
          ENTANDO_OPT_SNYK_ORG: "${{ secrets.ENTANDO_OPT_SNYK_ORG }}"
          SNYK_TOKEN: "${{ secrets.SNYK_TOKEN }}"
          ENTANDO_OPT_DOCKER_BUILDS: "${{ secrets.ENTANDO_OPT_DOCKER_BUILDS }}"
          ENTANDO_OPT_DOCKER_ORG: "${{ secrets.ENTANDO_OPT_DOCKER_ORG }}"
        run: |
          ~/ppl-run docker scan --id "SCAN-DOCKER" --lcd "$LOCAL_CLONE_DIR"

  post-dep-tests:
    needs: [ 'publication' ]
    if: needs.publication.outputs.POST_DEP_TESTS == 'true'
    runs-on: ubuntu-latest
    steps:
      #~ CHECKOUT
      - name: "CHECKOUT"
        id: CHECKOUT
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}
          ~/ppl-run \
            .. checkout-branch --id "CHECKOUT FOR PUBLICATION" \
                  --lcd "$LOCAL_CLONE_DIR" \
                  --token "$ENTANDO_BOT_TOKEN" \
            .. pr-preflight-checks --only flags --lcd "$LOCAL_CLONE_DIR" \
          ;
      #~ NODE
      - name: "Set up Node 14"
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      #~ NPM CACHE
      - name: "Cache NPM Packages"
        id: package-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm
      #~ PUBLISH  THE ARTIFACT
      - name: "Post deployment tests"
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}

          export ENTANDO_OPT_OKD_LOGIN_TOKEN="${{ secrets.ENTANDO_OPT_OKD_LOGIN_TOKEN }}"
          export ENTANDO_OPT_IMAGE_REGISTRY_CREDENTIALS="${{ secrets.ENTANDO_OPT_IMAGE_REGISTRY_CREDENTIALS }}"
          export ENTANDO_OPT_DOCKER_USERNAME="${{ secrets.ENTANDO_OPT_DOCKER_USERNAME }}"
          export ENTANDO_OPT_DOCKER_PASSWORD="${{ secrets.ENTANDO_OPT_DOCKER_PASSWORD }}"
          export ENTANDO_OPT_TEST_TLS_CRT="${{ secrets.ENTANDO_OPT_TEST_TLS_CRT }}"
          export ENTANDO_OPT_TEST_TLS_KEY="${{ secrets.ENTANDO_OPT_TEST_TLS_KEY }}"

          ~/ppl-run generic "POST-DEP-TESTS" --id "POST_DEP_TESTS" --lcd "$LOCAL_CLONE_DIR"
